
const double PI = 3.14159;
const double E = 2.71828;

proc abs(int x) => {
    if (x < 0) {
        result => {-x};
    } else {
        result => {x};
    }
}

proc sqrt(int x) => {
    if(x == 0) {
        result => {0};
    }

    double x_double = x * 1.0; >>$force double conversion
    double guess = x_double / 2.0;
    double epsilon = 0.000001;

    check ((abs(guess * guess -  x_double)) > epsilon) {
        guess = (guess + (x_double / guess)) / 2.0;
    }

    result => {guess};
}

proc pow(double base, double exponent) => {
    double epsilon = 0.000001;

    >>$ check if exponent is close to 0
    if(abs(exponent) < epsilon) {
        result => {1.0};
    }

    >>$ check if base is close to 0
    if(abs(base) < epsilon) {
        result => {0.0};
    }

    double result_val = 1.0;
    double remaining_exp = exponent;

    check (remaining_exp > 0.0) {
        result_val = result_val * base;
        remaining_exp = remaining_exp - 1.0;
    }

    result => {result_val};
}

proc min(double a, double b) => {
    if (a < b) {
        result => {a};
    } else {
        result => {b};
    }
}

proc max(double a, double b) => {
    if(a > b) {
        result => {a};
    } else {
        result => {b};
    }
}